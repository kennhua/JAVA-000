<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lgh.geektime.demo.dao.OrderMapper">
  <resultMap id="BaseResultMap" type="lgh.geektime.demo.entity.Order">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="user_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="user_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="order_number" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="receiver" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="receiver_phone" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="receiver_address" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="order_mount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="state" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, user_name, order_number, receiver, receiver_phone, receiver_address, 
    order_mount, state, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="lgh.geektime.demo.entity.Order">
    insert into tb_order ( user_id, user_name,
      order_number, receiver, receiver_phone, 
      receiver_address, order_mount, state, 
      create_time, update_time)
    values ( #{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR},
      #{orderNumber,jdbcType=BIGINT}, #{receiver,jdbcType=VARCHAR}, #{receiverPhone,jdbcType=CHAR}, 
      #{receiverAddress,jdbcType=VARCHAR}, #{orderMount,jdbcType=DECIMAL}, #{state,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="lgh.geektime.demo.entity.Order">
    insert into tb_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="orderNumber != null">
        order_number,
      </if>
      <if test="receiver != null">
        receiver,
      </if>
      <if test="receiverPhone != null">
        receiver_phone,
      </if>
      <if test="receiverAddress != null">
        receiver_address,
      </if>
      <if test="orderMount != null">
        order_mount,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="orderNumber != null">
        #{orderNumber,jdbcType=BIGINT},
      </if>
      <if test="receiver != null">
        #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="receiverPhone != null">
        #{receiverPhone,jdbcType=CHAR},
      </if>
      <if test="receiverAddress != null">
        #{receiverAddress,jdbcType=VARCHAR},
      </if>
      <if test="orderMount != null">
        #{orderMount,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="lgh.geektime.demo.entity.Order">
    update tb_order
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="orderNumber != null">
        order_number = #{orderNumber,jdbcType=BIGINT},
      </if>
      <if test="receiver != null">
        receiver = #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="receiverPhone != null">
        receiver_phone = #{receiverPhone,jdbcType=CHAR},
      </if>
      <if test="receiverAddress != null">
        receiver_address = #{receiverAddress,jdbcType=VARCHAR},
      </if>
      <if test="orderMount != null">
        order_mount = #{orderMount,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="lgh.geektime.demo.entity.Order">
    update tb_order
    set user_id = #{userId,jdbcType=BIGINT},
      user_name = #{userName,jdbcType=VARCHAR},
      order_number = #{orderNumber,jdbcType=BIGINT},
      receiver = #{receiver,jdbcType=VARCHAR},
      receiver_phone = #{receiverPhone,jdbcType=CHAR},
      receiver_address = #{receiverAddress,jdbcType=VARCHAR},
      order_mount = #{orderMount,jdbcType=DECIMAL},
      state = #{state,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="findAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_order
  </select>
</mapper>